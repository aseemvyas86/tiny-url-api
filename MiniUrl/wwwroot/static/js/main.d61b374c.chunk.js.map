{"version":3,"sources":["components/Header.jsx","config/index.js","config/config.qa.js","config/config.prod.js","api/ShortenApi.js","scenes/home/index.jsx","error/index.jsx","api/DetailApi.js","scenes/details/index.jsx","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","id","config","version","process","toUpperCase","Object","assign","apiBaseUrl","console","error","concat","endpoint","ShortenApi","longUrl","Promise","resolve","reject","fetch","method","mode","headers","Content-Type","body","JSON","stringify","then","response","json","obj","catch","err","Home","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","url","allUrls","shortenUrl","createUrl","bind","assertThisInitialized","_this2","isUrl","createShortUrl","result","originalUrl","shorten","setState","str","test","value","tempInput","document","style","appendChild","select","execCommand","removeChild","_this3","Card","border","Body","InputGroup","className","FormControl","placeholder","aria-label","aria-describedby","onChange","e","target","Append","Button","variant","onClick","length","map","item","key","Title","Link","Subtitle","size","copyToClipBoard","class","float","encodeURI","Component","Error","_ref","query","location","message","DetailApi","shorturl","Details","count","details","fetchData","match","params","getDetails","_this$state","objectDestructuringEmpty","window","origin","Table","striped","bordered","hover","ipAddress","timeStamp","deviceDetails","App","components_Header","Container","Row","Col","xs","react_router","exact","path","component","inject","observer","Boolean","hostname","rootEl","getElementById","browserHistory","createBrowserHistory","routingStore","RouterStore","stores","routing","history","syncHistoryWithStore","ReactDOM","render","index_module","react_router_dom","basename","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d61b374c.chunk.js","sourcesContent":["import React from \"react\";\nimport { Navbar } from \"react-bootstrap\";\n\nconst Header = () => {\n  return (\n    <Navbar bg=\"light\" expand=\"lg\">\n      <Navbar.Brand href=\"/app\">Shorten Url</Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\" />\n    </Navbar>\n  );\n};\n\nexport default Header;\n","// Load all available configurations\nimport localConfig from \"./config.local.js\";\nimport devConfig from \"./config.dev.js\";\nimport qaConfig from \"./config.qa.js\";\nimport prodConfig from \"./config.prod.js\";\n\nconst config = {\n  version: \"1.0.0\"\n};\n\n// Pick which config gets appended\nswitch (process.env.REACT_APP_ENV.toUpperCase()) {\n  case \"LOCAL\":\n    Object.assign(config, localConfig);\n    break;\n  case \"DEV\":\n    Object.assign(config, devConfig);\n    break;\n  case \"QA\":\n    Object.assign(config, qaConfig);\n    break;\n  case \"PROD\":\n    Object.assign(config, prodConfig);\n    break;\n  default:\n    console.error(`Unknown config specified: ${process.env.REACT_APP_ENV}`);\n    break;\n}\n\nexport default config;\n","export default {\n  apiBaseUrl: \"http://localhost:5000/api\"\n};\n","export default {\n  apiBaseUrl: \"https://minifyurlcloud.azurewebsites.net/api\"\n};\n","import config from \"config\";\n\nconst endpoint = `${config.apiBaseUrl}/Create`;\n\nclass ShortenApi {\n  static createShortUrl(longUrl) {\n    return new Promise((resolve, reject) => {\n      fetch(`${endpoint}`, {\n        method: \"POST\",\n        mode: \"cors\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(longUrl)\n      })\n        .then(response => {\n          return response.json();\n        })\n        .then(obj => {\n          resolve(obj);\n        })\n        .catch(err => {\n          reject(err);\n        });\n    });\n  }\n}\n\nexport default ShortenApi;\n","import React, { Component } from \"react\";\nimport { Card, Button, InputGroup, FormControl } from \"react-bootstrap\";\nimport ShortenApi from \"api/ShortenApi\";\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      url: \"\",\n      allUrls: [],\n      shortenUrl: \"\"\n    };\n    this.createUrl = this.createUrl.bind(this);\n  }\n\n  createUrl() {\n    const { url } = this.state;\n    debugger;\n    if (!this.isUrl(url)) {\n      return;\n    }\n    ShortenApi.createShortUrl(url).then(result => {\n      const { originalUrl, shortenUrl, shorten } = result;\n      this.setState({\n        allUrls: [\n          { url: originalUrl, shortenUrl: shortenUrl, shorten: shorten }\n        ]\n      });\n    });\n  }\n\n  isUrl(str) {\n    const regexp = /^(?:(?:https?|ftp):\\/\\/)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))(?::\\d{2,5})?(?:\\/\\S*)?$/;\n    if (regexp.test(str)) {\n      return true;\n    }\n    else {\n      return false;\n    }\n  }\n\n  copyToClipBoard(value) {\n    const tempInput = document.createElement(\"input\");\n    tempInput.style = \"position: absolute; left: -1000px; top: -1000px\";\n    tempInput.value = value;\n    document.body.appendChild(tempInput);\n    tempInput.select();\n    document.execCommand(\"copy\");\n    document.body.removeChild(tempInput);\n  }\n\n  render() {\n    const { allUrls } = this.state;\n    return (\n      <div>\n        <br />\n        <Card border=\"success\">\n          <Card.Body>\n            <InputGroup className=\"mb-3\">\n              <FormControl\n                placeholder=\"Paste a link to shorten it!\"\n                aria-label=\"Paste a link to shorten it!\"\n                aria-describedby=\"basic-addon2\"\n                onChange={e => {\n                  this.setState({ url: e.target.value });\n                }}\n              />\n              <InputGroup.Append>\n                <Button variant=\"outline-secondary\" onClick={this.createUrl}>\n                  Shorten\n                </Button>\n              </InputGroup.Append>\n            </InputGroup>\n          </Card.Body>\n        </Card>\n        <br />\n        {allUrls && allUrls.length > 0 && (\n          <div>\n            <hr />\n            {allUrls.map(item => {\n              return (\n                <Card key={item.url}>\n                  <Card.Body>\n                    <Card.Title>\n                      <Card.Link target=\"_blank\" href={item.url}>\n                        {item.url}\n                      </Card.Link>\n                    </Card.Title>\n                    <Card.Subtitle className=\"mb-2 text-muted\">\n                      <span>\n                        {item.shortenUrl}{\" \"}\n                        <Button\n                          size=\"sm\"\n                          variant=\"outline-secondary\"\n                          onClick={() => {\n                            this.copyToClipBoard(item.shortenUrl);\n                          }}\n                        >\n                          <i class=\"fas fa-copy\" /> Copy\n                        </Button>{\" \"}\n                      </span>\n                      <Card.Link\n                        style={{ float: \"right\" }}\n                        href={encodeURI(`/app/details/${item.shorten}`)}\n                      >\n                        <i className=\"fas fa-chart-bar\" />\n                      </Card.Link>\n                    </Card.Subtitle>\n                  </Card.Body>\n                </Card>\n              );\n            })}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React from \"react\";\n\nconst Error = ({ location: { query } }) => {\n  const message = query && query.message;\n\n  return (\n    <div>\n      <h3>An error as occured</h3>\n      <div>{message}</div>\n    </div>\n  );\n};\n\nexport default Error;\n","import config from \"config\";\n\nconst endpoint = `${config.apiBaseUrl}/Detail`;\n\nclass DetailApi {\n  static getDetails(shorturl) {\n    return new Promise((resolve, reject) => {\n      fetch(`${endpoint}/${shorturl}`, {\n        method: \"GET\",\n        mode: \"cors\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      })\n        .then(response => {\n          return response.json();\n        })\n        .then(obj => {\n          resolve(obj);\n        })\n        .catch(err => {\n          reject(err);\n        });\n    });\n  }\n}\n\nexport default DetailApi;\n","import React, { Component } from \"react\";\nimport { Card, Table } from \"react-bootstrap\";\nimport DetailApi from \"api/DetailApi\";\n\nclass Details extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      originalUrl: \"\",\n      shortenUrl: \"\",\n      count: 0,\n      details: []\n    };\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  fetchData() {\n    const { url } = this.props.match.params;\n\n    DetailApi.getDetails(url).then(result => {\n      if (result) {\n        const { shortenUrl, originalUrl, details } = result;\n        const count = details.length;\n        this.setState({\n          details,\n          originalUrl,\n          shortenUrl,\n          count\n        });\n      }\n    });\n  }\n\n  render() {\n    const { shortenUrl, originalUrl, details, count } = this.state;\n    const {} = this.props.match.params;\n    return (\n      <div>\n        <br />\n        <Card>\n          <Card.Body>\n            <Card.Title>{`${window.location.origin}/${shortenUrl}`}</Card.Title>\n            <Card.Subtitle className=\"mb-2 text-muted\">\n              {originalUrl}\n              <Card.Link style={{ float: \"right\" }}>\n                {count} <i className=\"fas fa-chart-bar\" />\n              </Card.Link>\n            </Card.Subtitle>\n          </Card.Body>\n        </Card>\n        <br />\n        {details && details.length > 0 && (\n          <Card>\n            <Card.Body>\n              <Table striped bordered hover size=\"sm\">\n                <thead>\n                  <tr>\n                    <th>Location</th>\n                    <th>Timestamp</th>\n                    <th>Agent</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {details.map(item => {\n                    return (\n                      <tr>\n                        <td>{item.ipAddress}</td>\n                        <td>{JSON.stringify(item.timeStamp)}</td>\n                        <td>{item.deviceDetails}</td>\n                      </tr>\n                    );\n                  })}\n                </tbody>\n              </Table>\n            </Card.Body>\n          </Card>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Details;\n","import React, { Component } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { inject, observer } from \"mobx-react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Header from \"./components/Header\";\nimport \"./App.css\";\nimport Home from \"./scenes/home\";\nimport Error from \"./error\";\nimport Details from \"./scenes/details\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Header />\n        <Container>\n          <Row>\n            <Col xs={12}>\n              <Switch>\n                <Route exact path=\"/\" component={Home} />\n                <Route path=\"/details/:url\" component={Details} />\n                <Route component={Error} />\n              </Switch>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default inject(\"routing\")(observer(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import \"babel-polyfill\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { createBrowserHistory } from \"history\";\nimport { Provider } from \"mobx-react\";\nimport { RouterStore, syncHistoryWithStore } from \"mobx-react-router\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst rootEl = document.getElementById(\"root\");\nconst browserHistory = createBrowserHistory();\nconst routingStore = new RouterStore();\n\nconst stores = {\n  // Key can be whatever you want\n  routing: routingStore\n  // ...other stores\n};\n\nconst history = syncHistoryWithStore(browserHistory, routingStore);\n\nReactDOM.render(\n  <Provider {...stores}>\n    <Router basename={\"app\"} history={history}>\n      <App />\n    </Router>\n  </Provider>,\n  rootEl\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n/* Enables Hot Reloading of React Modules.  Once Create-React-App\n   supports HMR this will be unnessasary. */\nif (module.hot) {\n  module.hot.accept(\"./App\", () => {\n    const NextApp = require(\"./App\").default;\n    ReactDOM.render(<NextApp />, rootEl);\n  });\n}\n"],"sourceRoot":""}